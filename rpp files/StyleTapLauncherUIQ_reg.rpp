# 1 "C:\\Symbian\\Carbide\\workspace\\StyleTapLauncherUIQ\\data\\StyleTapLauncherUIQ_reg.rss"
# 1 "..\\..\\..\\..\\UIQ3SDK\\epoc32\\include\\variant\\UIQ_3.0.hrh" 1
// UIQ_3.0.hrh
//
// Copyright (c) UIQ3.0 2004. All rights reserved.
//

// Configuration options for UIQ3.0
//
// 

# 1 "..\\..\\..\\..\\UIQ3SDK\\epoc32\\include\\variant\\Symbian_OS_v9.1.hrh" 1
// Symbian_OS_v9.1.hrh
//
// Copyright (c) Symbian Software Ltd 2004.  All rights reserved.
//

// Configuration options for Symbian_OS_v9.1
//
// This file is managed by the Master Codeline Forum


/**
@publishedAll

EKA2

If EKA2 is defined, assume Kernel Architecture 2.
If EKA2 is not defined, assume Kernel Architecture 1

Kernel Architecture 2 is a defining property of the Cedar platform.
Kernel Architecture 1 is a defining property of the Beech platform.
*/




/**
@publishedAll
@deprecated
@since 8.0

SYMBIAN_CRYPTO

*/


/**
@publishedAll

__CNF_FORMAT_V2__

If __CNF_FORMAT_V2__ is defined, assume that Epoccnf.pl generates
files in version 2 of the CNF format, and that both versions 1
and 2 of this file format can be read by Conarc.
If __CNF_FORMAT_V2__ is not defined, assume that Epoccnf.pl
generates files in version 1 of the CNF format, and that only
version 1 of this file format can be read by Conarc.
*/


/**
@publishedAll
@deprecated
@since 8.0

__KEYSTORE_API_V2__

*/


/**
@publishedAll

__BLUETOOTH_API_V2__

If __BLUETOOTH_API_V2__ is defined assume that version 2 of the bluetooth
subsystem will be built.  This is binary compatible with version 1 for all
published-all APIs but is not source compatible.  Users of classes defined
in BTDevice.h and BTManClient.h may need to make source changes.

The BTRegistry.dll is removed, users should link instead against BTManClient.lib.
The APIs provided by that DLL were classified as published-partner.

@see CBTDevice
@see SGL.GT172.103 - Bluetooth Compatibility Specification

If __BLUETOOTH_API_V2__ is not defined then version 1 of the bluetooth subsystem
will be built.

*/



/**
@publishedAll

__OBEX_USER_DEFINED_HEADERS__

If __OBEX_USER_DEFINED_HEADERS__ is defined then the new API support for extended Headers will be available.
This new support includes USER DEFINED HEADERS and the COUNT header.
If this functionality is compiled out then the old API is available as before.
For more information on see documents shown below.

@see SGL.GT171.097 - Obex Header Extension how to
@see SGL.GT171.095 - Obex Extension Design Document
*/



/**
@publishedAll

__HIDE_IPC_V1__

If __HIDE_IPC_V1__ is defined then the deprecated insecure IPC APIs will be removed from various Symbian OS header files. Classes affected include CSession, CServer, RMessage and RMessageptr.

For more information see the document listed below.

@see SMG.SM0005.004 - Platform Security Development for Zephyr
@see CSession
@see CServer
@see RMessage
@see RMessagePtr
*/



/**
@internalAll

DO_NOT_USE_THIS_MACRO

If DO_NOT_USE_THIS_MACRO is defined, assume the Cedar platform.
If DO_NOT_USE_THIS_MACRO is not defined, assume the Beech platform.

This macro was originally introduced as a stopgap measure, to
identify differences between Symbian OS v7.0s and Symbian OS v8.0b
which were not specifically to do with the change from Kernel
Architecture 1 to Kernel Architecture 2.

This macro will be deprecated when a suitable alternative is provided.
*/





/**
@publishedAll

__CONDITIONS_SCHEDULES_VALID__

If __CONDITIONS_SCHEDULES_VALID__ is defined then the Task Scheduler component 
supports creating persistent schedules based on a set of conditions and a 
timeout. The schedule is run when either all the conditions are met or the 
timeout is reached.

This functionality is part of PREQ694 - PREQ 694 - Automatic sending of SMS on
network reconnection.
*/




/**
@publishedAll

__JAVACUSTOMINSTALL__

If __JAVACUSTOMINSTALL__ is defined then an additional UI callback is made after MIDlet
installation has succeeded or failed. This callback is intended for information only and the 
information passed can be licensee customised. The intention would be that the device user
can use this information to diagnose install problems in conjunction with network operators.
If this #define is not present then the callback is not present and is not called.
For more information on see documents shown below.

@see SGL.GT0188.253 CDMA Java MIDlet Installer Component Design
*/


/**
@publishedAll

__UI_FRAMEWORKS_V2__

If __UI_FRAMEWORKS_V2__ is defined then PlatSec aware UI Frameworks API's will be available. 
The following frameworks will be affected:

Applications 
File Recognizers
Data Recognizers
Notifiers
Control Panel Plugins
Feps
App-initialization (CEikLibrary)
Converters
Error-Resolving
*/




/**
@publishedAll

__BLUETOOTH_HCI_ALLOWS_AFH__

If __BLUETOOTH_HCI_ALLOWS_AFH__ is defined the HCI interface will require the Adaptive Frequency Hopping CHCIBase pure virtual functions to be implemented in any derived class in Licensee produced host controller interface (HCI) code. 
If this is not defined no AFH commands may be sent to the host controller, and no AFH events will be received from the host controller. 
The APIs provided by the HCI DLL were classified as published-partner.

@see CHCIBase
@see MHCIEventObserver

*/


/**
@publishedAll

__MESSAGING_API_V2__

If __MESSAGING_API_V2__ is defined then new functionality 
is available within the Messaging sub-system to support a 
platform secured OS, e.g. the Attachment API.
*/




/**
@internalAll

__BC_FUTURE_PROOFING__

Support for the implementation of PREQ743 "Introduction of interface 
robustness patterns to support future binary compatibility".
*/


/**
@publishedAll

__SECURE_DATA__

When __SECURE_DATA__ is defined, public read-only files are
assumed to be in their data-caged locations. The presence of
this #define does not imply that data-caging is enforced, and
does not imply that binaries have been relocated to sys\bin.

This #define supports PREQ537 "Platform security - file system layout".
*/


/**
@publishedPartner

__SECURE_BIN__

When __SECURE_BIN__ is defined, executable files stored as
"data" in the XIP ROM are assumed to be in their data-caged 
locations. The presence of this #define does not imply that 
data-caging is enforced, and does not imply that binaries have 
been relocated to sys\bin.

This #define supports PREQ537 "Platform security - file system layout".
*/


/**
@publishedAll

__SECURE_TELEPHONY__

If __SECURE_TELEPHONY__ is defined, all Platform Security functionality 
within the Telephony subsystem will be enabled.
If __SECURE_TELEPHONY__ is not defined, no Platform Security functionality 
within the Telephony subsystem is enabled.
*/


/**
@publishedAll

SYMBIAN_NETWORKING_PLATSEC

If SYMBIAN_NETWORKING_PLATSEC is defined, additional platform security 
related functionality in enabled in the Comms-Infras and Networking 
subsystems (e.g. API policing).
*/


/**
@publishedAll

__WATCHER_API_V2__

If __WATCHER_API_V2__ is defined then the 
watcher framework supports ECOM watcher plugins.
*/

/**
@publishedAll

SYMBIAN_COREAPPS_API_V2

If SYMBIAN_COREAPPS_API_V2 is defined then new functionality is available within 
the Core Apps sub-system (Contacts Model, Agenda Model and World Server) to 
support a platform secured OS.
*/



/**
@publishedAll

SYMBIAN_COREAPPS_PLUGIN_API_V2

If SYMBIAN_COREAPPS_PLUGIN_API_V2 is defined then  Ecom solely is used as loading 
mechanism.The legacy plugin loading mechanism is used otherwise.
*/


/**
@PublishedPartner

SYMBIAN_SECURE_DBMS

When SYMBIAN_SECURE_DBMS is defined, support for secure 
shared databases is enabled within DBMS.  
When not defined, all secure-shared-database-specific APIs 
take the form of dummy implementations which return KErrNone.
*/


/**
@publishedPartner

__SECURE_SOFTWARE_INSTALL__

When __SECURE_SOFTWARE_INSTALL__ is defined, the Software
Install APIs are replaced with versions appropriate to
the Secure Platform.

This #define supports PREQ56 "Software install enhancements"
*/


/**
@publishedAll

__SECURITY_PLATSEC_ARCH__

If this macro is defined, then platform security aware security services 
APIs will be present.  This includes architectural changes to several 
components.

If this macro is not defined, the original version (since 8.0) of the 
security services APIs will be present. 

The following components are affected:
  cryptotokens
  certman
  filetokens

*/


/**
@publishedAll

SYMBIAN_SECURE_ECOM

When SYMBIAN_SECURE_ECOM is not defined, ECOM plugins are discovered by 
searching for DLLs in System\libs\plugins, and inferring the name of 
the resource file from the UID3 of the DLL.

When SYMBIAN_SECURE_ECOM is defined, ECOM plugins will also be discovered
by searching for resource files in \Resource\Plugins, and inferring the
name of the DLL from the name of the resource file. When platform security
is fully enforced, only this new style of discovery will work.

@see common\generic\syslibs\documentation\syslibs_functional_specification.doc
*/


/**
@publishedAll

SYMBIAN_SECURITY_CAF_RFILE_HANDLE

If SYMBIAN_SECURITY_CAF_RFILE_HANDLE is defined then it enables the Content Access 
Framework to read from files passed to it as an open RFile handles instead of CAF 
opening the file itself. This allows files stored in a data caged directory to be 
read by CAF.  

*/


/** 
@publishedPartner

SYMBIAN_C32ROOT_API_V2

Strengthens the C32Root API and extends it to include 
configuration of queue length for bindings. 

This #define supports PREQ318.
*/


/**
@publishedPartner

SYMBIAN_ESOCK_V3

If SYMBIAN_ESOCK_V3 is defined, the socket server allows protocol 
families to run in individual threads to protect one protocol family 
from the behaviour of another. The allocation of protocol families to
threads is determined by a naming convention on the ESK files.

This #define supports PREQ318.
*/


/**
@publishedPartner

SYMBIAN_UIKON_UNIFICATION

When SYMBIAN_UIKON_UNIFICATION is defined, the existing 
CEikSrvAppUiBase class is replaced with a customisable class
provided by the System GUI. 

This #define supports PREQ819 and PREQ826
*/


/**
@publishedPartner
@released 9.0

SYMBIAN_NETWORKING_RSUBCONNECTION

If SYMBIAN_NETWORKING_RSUBCONNECTION is defined, the RQosChannel API is
removed, and the RSubConnection API exported by ESOCK must be used instead.

This #define supports PREQ 26.
*/ 


/**
@publishedAll

SYMBIAN_UI_FRAMEWORKS_CONTROL_API_V2

If SYMBIAN_UI_FRAMEWORKS_CONTROL_API_V2 is defined then 
the following additional features will be available in CONE.
1) Functions to set and get the background of a control.
2) Functions to add components to a compound control in a simpler way.
3) Hooks for the support of layout managers.
4) A component that will provide fonts and cache them for easier use 
   of these fonts by controls.

@see CCoeControl
*/


/**
@publishedPartner

SYMBIAN_SECURE_MIDLET_INSTALL

If SYMBIAN_SECURE_MIDLET_INSTALL is defined then the Java MIDlet 
Installer supports installation under Platform Security policies, 
using the interface published by security\JavaMIDletInstaller.

If SYMBIAN_SECURE_MIDLET_INSTALL is not defined then Java MIDlet 
installation is achieved through the security\appinst interfaces.
*/


/**
@publishedAll

__SECURE_BACKUP__

If __SECURE_BACKUP__ is defined, the Secure Backup server replaces
the use of SCRemFs for backup and restore, changing the backup protocol.
Applications which have private data need to provide additional backup 
registration files, and may use Publish & Subscribe to receive 
notification of backup requests.

This #define supports PREQ716 - Provide support for secure backup and 
restore for licensee PC Connectivity software 
*/


/**
@published All 

SYMBIAN_COMMS_REPOSITORY

Comms data is now stored in the Central Repository rather than the DBMS server.  
A new module, CommsDat.dll, replaces Commdb.dll as the interface for comms data stored on a device. 
CommsDat has a different API to Commdb, but provides equivalent functionality. 
There is no longer an SQL API for access to Comms Data. 
Commdb tools have been migrated for use with CommsDat 
Commdb is deprecated and should not be used, though it remains as a temporary BC shim on top of CommsDat.   
*/


/**
@publishedAll

__HIDE_WATCHER_API_V1__

Hides support APIs for loading non-ECOM watcher plugins. Non-ECOM watcher 
plugins are still loaded. The associated define __REMOVE_WATCHER_API_V1__
removes the implementation of the support APIs.

Assumes that __WATCHER_API_V2__ has been defined.
*/



/** 
@publishedAll

SYMBIAN_NETWORKING_REMOVE_RGENERIC

If this macro is defined the deprecated APIs RGenericAgent, 
RNif, RNifMonitor and Nifman are removed. All of these APIs, 
exported by NIFMAN, have been deprecated and replaced by 
the RConnection API exported by ESOCK.

@see Break request BR1070 
*/ 


/**
@publishedPartner

SYMBIAN_IGNORE_BIN_TARGETPATH

When SYMBIAN_IGNORE_BIN_TARGETPATH is defined the TARGETPATH keyword in MMP files is ignored for executables. 
Executables for the emulator instead get built to the default location.
e.g. \epoc32\release\winscw\udeb
*/


/**
@publishedAll

SYMBIAN_HIDE_COREAPPS_API_V1

If SYMBIAN_HIDE_COREAPPS_API_V1 is defined then the insecure CoreApps APIs
will be removed from various Symbian OS header files. Components affected are 
Contacts Model, Agenda Model and World Server.

The related define SYMBIAN_REMOVE_COREAPPS_API_V1 removes the underlying implementations,
causing a binary compatibility break to match the source compatibility break.
*/



/**
@publishedAll

__SECURE_API__

Hides unsecure APIs. Many of these have been replaced by Secure variants 
but some are no longer available in a Secure platform.

e.g.

@see User::RenameThread
@see User::CommandLine

*/



/**
@publishedPartner
@since 8.1

SYMBIAN_BLUETOOTH_REQUIRES_HCI_FLUSH_COMPLETE_EVENT 

If this is defined, the MHCIEventObserver class must implement
the FlushCompleteEvent virtual function, which will be used by 
the link manager to send Flush Complete events up to the stack. 
If this macro is not defined, Flush Complete events will be discarded.

@see MHCIEventObserver
@see CHCIFacade
*/


/**
@publishedPartner

SYMBIAN_FONT_METRICS_V2 

If this is defined, then classes which derive from COpenFont (usually 
these are part of a font rasterizer implementation) must set the 
protected member variables:
iFontAscentOfCapitals
iFontAscentIncAccents
iFontDescent
iFontLineGap
to appropriate values during the creation of a font. 
If this macro is not defined then these member variables do not exist.

@see COpenFont
*/


/**
@publishedPartner

SYMBIAN_GRAPHICS_ALPHA_SUPPORT_V1

When SYMBIAN_GRAPHICS_ALPHA_SUPPORT_V1 is defined a new EColor16MA 
display mode is available, having an alpha channel. The alpha support 
is tailored to the needs of wserv server-side, although some alpha 
support will also be available to client applications.

This #define supports PREQ915.
*/


/**
@publishedPartner

SYMBIAN_TELEPHONY_IMS

If SYMBIAN_TELEPHONY_IMS is defined then IMS related APIs are included 
in Telephony components.

This #define supports PREQ61.
*/


/**
@internalComponent

__LEAVE_EQUALS_THROW__

If __LEAVE_EQUALS_THROW__ is defined, User::Leave() and TRAP() are 
implemented in terms of C++ exceptions where the compiler supports this.
If __LEAVE_EQUALS_THROW__ is not defined, the legacy Symbian exception 
mechanism is used instead.

Support for C++ exceptions by the compiler is indicated by the 
internal macro __SUPPORT_CPP_EXCEPTIONS__ supplied by the tools.  
Where this macro is not present, __LEAVE_EQUALS_THROW__ is automatically 
undefined.

This macro supports PREQ519 "Implement User::Leave() in terms of throw()".
*/


/**
@publishedPartner

SYMBIAN_CAF_V2

The SYMBIAN_CAF_V2 flag indicates the CAF API v2 is present. 
CAF v2 supports files containing multiple content objects, which requires 
a change of API for CAF agents: agents written for CAF v1 will not compile
against CAF v2. See BR.1219.2 for migration information.

This #define supports PREQ780.
*/


/**  
@publishedAll 

SYMBIAN_MDF_API_V2 

This macro selects the Symbian OS 9.x phase of development in 
the Media Device Framework API, including changes to enable 
MDF Video Decoder Hardware devices to support applications, 
streaming and demux.

@see CMMFVideoPlayHwDevice
*/ 


/**
SYMBIAN_GENERIC_SYSTEM_STARTUP

@publishedPartner

This #define enables the generic start-up architecture in
which the System Starter process is responsible for the
controlled startup of the system. 

The #define supports PREQ808 and PREQ809.
*/


/**
SYMBIAN_STAGED_SYSTEM_STARTUP

@publishedPartner

When SYMBIAN_STAGED_SYSTEM_STARTUP is defined, the staged 
start-up architecture has been introduced into the OS and 
'Start-up State Aware' components can make use of the 
architecture.

This #define supports PREQ 810.
*/


/**
SYMBIAN_TIMEZONE_SUPPORT_V1

@publishedAll

When SYMBIAN_TIMEZONE_SUPPORT_V1 is defined the App-services TzClient.dll 
module (and accompanying import library) is made available for client 
application use.

This #define supports PREQ663
*/


/**
SYMBIAN_ECAM_CHUNKAPI

@publishedAll
@released

Specifies that an extended API will be used in the multimedia 
camera interface. This has a v2 observer which allows camera data 
to be returned without buffer copy, and also allows clients to set 
camera access priority

@see CCamera
@see MCameraObserver2

This #define supports PREQ799.
*/


/**
@publishedAll

SYMBIAN_SECURE_PUBLISH_AND_SUBSCRIBE

If this macro is defined, then the Bluetooth stack reconfigures to take
advantage of security mechanisms in Publish and Subscribe. Any other
components requiring reconfiguration to make use of Publish and Subscribe
can also use this macro.

*/


/**
@publishedAll

SYMBIAN_MMF_AUTOPAUSE_RESUME

This #define enables extra features in the MMF APIs for auto pause 
and resume of audio streams.
*/


/**
@publishedPartner

SYMBIAN_BLUETOOTH_ESCO_ENABLED

Enable support for Bluetooth eSCO synchronous links.  
Defining this macro extends the interface to CHCIBase to support 
the Synchronous connection commands added in Bluetooth 1.2.
*/


/**
SYMBIAN_ROM_STATIC_PLUGIN_INFORMATION

@publishedPartner
 
This macro enables a consolidation phase in the ROM building 
process to generate additional metadata for each ROM drive.  
The metadata describes the content and structure of the ROM 
conveniently filtered for any component that requires it.

Components supply metadata with the "spidata" BUILDROM keyword.

This macro supports PREQ806 and other requirements that 
eliminate run-time scanning of ROM content.
*/


/**
@publishedPartner

SYMBIAN_BOOKMARK_DATABASE

The Bookmark Database is an API used to provide system-wide 
storage and management functionality for URI bookmarks. 
If defined, this macro indicates that the Bookmark Database 
API is present in the platform.
*/


/**
@publishedAll

SYMBIAN_ASSUME_SECURE_DATA

When this macro is defined, all data files are assumed to be in their secure
locations, and all code which provided backward compatibility for the
insecure locations is removed. For example, ICL extended resource files
will not be loaded from System\Libs\Plugins, only from \Resource\ICL.

This macro only makes sense if __SECURE_DATA__ is defined.
*/


/**
@publishedPartner

SYMBIAN_SWI_POST_INSTALL_REVOCATION

When SYMBIAN_SWI_POST_INSTALL_REVOCATION is defined, 
support for the SWI post install revocation service is enabled.

This #define supports PREQ919
*/
//#define SYMBIAN_SWI_POST_INSTALL_REVOCATION

/**  
@publishedAll 

SYMBIAN_REMOVE_TRIVIAL_ENCRYPTION

This macro removes the trivial encryption APIs that are exported by EUSER. 

See BR1320 for more details

*/


/**
@publishedPartner

SYMBIAN_FLEXIBLE_ALARM

When this macro is defined, Calendar Interim API, Alarm server and UIKON 
Alert Server will support additional functionality.
- Extra data can be attached to calendar alarm and allow UI app 
to retrieve the associated data.
- The Alarm server can send multiple expired alarms to Alert Server without 
waiting for the previous alarm acknowledged first
- A Resource file can be used to configure alarm play intervals and durations, 
or to disable alarm sound control.

This #define supports PREQ1118
*/
//#define SYMBIAN_FLEXIBLE_ALARM

/**
@publishedPartner 

SYMBIAN_C32_SERCOMMS_V2

Description: 
If SYMBIAN_C32_SERCOMMS_V2 is defined, the Comms Server allows grouped CSYs
to get loaded into individual threads in order to avoid CSY blocking. 
The allocation of CSYs to threads is determined by naming convention from 
the configurator/INI file. 

This #define supports PREQ890
*/
//#define SYMBIAN_C32_SERCOMMS_V2

/**
@publishedPartner

SYMBIAN_SMS_REL6_SUPPORT

SMS Release 6 support is defined in the 3GPP specifications
(3GPP TS 23.040 V6.5.0 and 3GPP TS 23.038 V6.1.0).
If defined, this macro indicates that Symbian OS SMS APIs
shall support Release 6 functionality.
*/
//#define SYMBIAN_SMS_REL6_SUPPORT

/**
@publishedPartner

SYMBIAN_HCI_API_V2

If SYMBIAN_HCI_API_V2 is defined then the HCI APIs provided in PREQ750 
(Bluetooth HCI improvements) will be required for use by a version 2 
Bluetooth Stack and a version 2 HCI. These APIs are neither binary nor 
source compatible with the previous version 1 HCI APIs. Both the original 
version 1  Bluetooth stack and HCI, and the new version 2 Bluetooth stack 
and HCI will be built, but both rombuild and the emulator will be 
configured to use the version 2 binaries. The version 2 HCI will support 
all commands and events listed in Bluetooth v2.0 specification.

If SYMBIAN_HCI_API_V2 is not defined then only the version 1 Bluetooth 
stack and HCI will be built and used by rombuild and the emulator.
The version 1 HCI supports most but NOT all commands and events listed 
in Bluetooth v2.0 specification.

See BR1613 for more information.
*/
//#define SYMBIAN_HCI_API_V2
# 10 "..\\..\\..\\..\\UIQ3SDK\\epoc32\\include\\variant\\UIQ_3.0.hrh" 2



# 1 "C:\\Symbian\\Carbide\\workspace\\StyleTapLauncherUIQ\\data\\StyleTapLauncherUIQ_reg.rss" 2
/*
============================================================================
 Name		: StyleTapLauncherUIQ_reg.rss
 Author	  : Gregory Sokoloff
 Version	 :
 Copyright   : Copyright (c) 2008 StyleTap Inc. All Rights Reserved.
 Description : This is the registration file for StyleTapLauncherUIQ.
============================================================================
*/

// All registration files need to #include appinfo.rh. 
# 1 "..\\..\\..\\..\\UIQ3SDK\\EPOC32\\INCLUDE\\AppInfo.rh" 1
// APPINFO.RH
//
// Copyright (c) Symbian Software Ltd 2004-2005. All rights reserved.
//



//
// contains definitions for the Application Information resource files

/**
@publishedAll
@released
*/


//////////////////////////////////////////////////////////////////
// DEFINITIONS FOR THE NON-LOCALISABLE REGISTRATION RESOURCE FILE
//////////////////////////////////////////////////////////////////

/**
@publishedAll
@released
*/


/**
@publishedAll
@released
*/
// constants for capability.hidden



/**
@publishedAll
@released
*/
// constants for capability.newfile



/**
@publishedAll
@released
*/
// constants for capability.embeddability






/**
@publishedAll
@released
*/
// constants for capability.launch



/**
@publishedAll
@released
*/
// bit flags for capability.attributes




/**
@publishedAll
@released
*/
// application group name



/**
@publishedAll
@released
*/
STRUCT APP_REGISTRATION_INFO
	{
	LONG reserved_long = 0; // reserved for future use, do not use
	LLINK reserved_llink = 0; // reserved for future use, do not use
	//
	LTEXT app_file(256 ) = ""; // name of application binary file (not including extension) - mandatory
	LONG attributes = 0;
	//
	LTEXT localisable_resource_file(256 ) = ""; // path (not including drive) and name of localisable resource file
	LONG localisable_resource_id = 1;
	//
	BYTE hidden = 0 ;
	BYTE embeddability = 0 ;
	BYTE newfile = 0 ;
	BYTE launch = 0 ;
	LTEXT group_name(16 ) = "";
	//
	BYTE default_screen_number = 0;
	//
	LEN WORD STRUCT datatype_list[]; // DATATYPE
	//
	LEN WORD STRUCT file_ownership_list[]; // FILE_OWNERSHIP_INFO
	//
	LEN WORD STRUCT service_list[]; // SERVICE_INFO
	//
	LLINK opaque_data = 0;	// use for opaque data to send to non-native application launchers i.e. MIDlet id
	}


/**
@publishedAll
@released
*/


/**
@publishedAll
@released
*/
enum
	{
	EDataTypePrioritySystem = 0xFFF9,
	EDataTypePriorityHigh = 10000,
	EDataTypePriorityNormal = 0,
	EDataTypePriorityLow = -10000,
	EDataTypePriorityLastResort = -20000
	};

/**
@publishedAll
@released
*/
STRUCT DATATYPE
	{
	LONG priority;
	LTEXT8 type(256 );
	}

/**
@publishedAll
@released
*/
STRUCT FILE_OWNERSHIP_INFO
	{
	LTEXT file_name(256 );
	}

/**
@publishedAll
@released
*/
STRUCT SERVICE_INFO
	{
	LONG uid = 0;
	LEN WORD STRUCT datatype_list[];
	LLINK opaque_data = 0;
	}


/////////////////////////////////////////////////
// DEFINITIONS FOR THE LOCALISABLE RESOURCE FILE
/////////////////////////////////////////////////

/**
@publishedAll
@released
*/


/**
@publishedAll
@released
*/
STRUCT LOCALISABLE_APP_INFO
	{
	LONG reserved_long = 0; // reserved for future use, do not use
	LLINK reserved_llink = 0; // reserved for future use, do not use
	//
	LTEXT short_caption(256 ) = "";
	STRUCT caption_and_icon; // CAPTION_AND_ICON_INFO
	//
	LEN WORD STRUCT view_list[]; // VIEW_DATA
	//
	LTEXT group_name(16 ) = "";
	}

/**
@publishedAll
@released
*/
STRUCT CAPTION_AND_ICON_INFO
	{
	LONG reserved_long = 0; // reserved for future use, do not use
	LLINK reserved_llink = 0; // reserved for future use, do not use
	//
	LTEXT caption(256 ) = "";
	//
	WORD number_of_icons = 0; // each icon must be a bitmap/mask pair
	LTEXT icon_file(256 ) = "";
	}

/**
@publishedAll
@released
*/
STRUCT VIEW_DATA
	{
	LONG reserved_long = 0; // reserved for future use, do not use
	LLINK reserved_llink = 0; // reserved for future use, do not use
	//
	LONG uid = 0;
	//
	LONG screen_mode = 0;
	//
	STRUCT caption_and_icon; // CAPTION_AND_ICON_INFO
	}



# 12 "C:\\Symbian\\Carbide\\workspace\\StyleTapLauncherUIQ\\data\\StyleTapLauncherUIQ_reg.rss" 2


// All registration files must define UID2, which is always 
// KUidAppRegistrationResourceFile, and UID3, which is the application's UID.
UID2 0x101f8021 
UID3 0x2000C5BB // application UID

// Registration file needs to contain an APP_REGISTRATION_INFO resource that
// minimally needs to provide the name of the application binary (using the 
// app_file statement). 
RESOURCE APP_REGISTRATION_INFO
{
	app_file = "StyleTapLauncherUIQ"; // filename of application binary (minus extension)
	// Specify the location of the localisable icon/caption definition file
	localisable_resource_file = "\\Resource\\Apps\\StyleTapLauncherUIQ_loc";

	embeddability= 0 ;
	newfile= 0 ;
}

